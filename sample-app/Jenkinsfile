
def dockerCredential = "docker_credential"
def imageTag = "DOCKER_REPOSITORY:${env.BRANCH_NAME}.${env.BUILD_NUMBER}"
def mavenCacheVolume = "jenkins-release"
def label = "jenkins-${UUID.randomUUID().toString()}"

podTemplate(label:label,

    containers: [
        containerTemplate(name: 'maven', image: 'maven:3.5.2-jdk-8-alpine', ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'docker', image: 'docker', ttyEnabled: true, command: 'cat')
    ],

    volumes: [
        hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
        persistentVolumeClaim(mountPath: '/root/.m2', claimName: mavenCacheVolume)
    ]) {
 
    stage('Maven Build') {
        container('maven') {
            sh 'mvn clean package -Dmaven.repo.local=/root/.m2/${JOB_NAME}'
        }
    }
    
    stage('Docker Build') {
        container('docker') {
            withCredentials([usernamePassword(credentialsId: dockerCredential, passwordVariable: 'dockerPassword', usernameVariable: 'dockerUser')]) {
                sh 'docker login -u ' + dockerUser + ' -p ' + dockerPassword
                sh 'docker build -t ' + imageTag + ' .'
                sh 'docker push ' + imageTag
            }
        }
    }
}
  